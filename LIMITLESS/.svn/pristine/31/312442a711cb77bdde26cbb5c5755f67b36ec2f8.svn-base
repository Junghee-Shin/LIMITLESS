/**
 * 
 */
package com.limitless.userboard1;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.ResourceBundle;

import com.hr.eclass.cmn.HRConst;
import com.hr.eclass.member.domain.MemberEClassVO;

import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
/**
 * @author sist
 *
 */
public class UserBoardFXcontroller implements Initializable {
	
	@FXML Button writeBtn;
	@FXML TableView <UserBoardTableVO> tableView;	
	@FXML TextField txtcontent;
	@FXML Button homeBtn;
	
	private UserBoardDao userBoardDao;
	
	
	private ObservableList<UserBoardTableVO> commentlist;
	public void handleWriteBtnAddAction(ActionEvent e){
		
		//member
		MemberEClassVO sessoionVO = new MemberEClassVO();
		
			String content = txtcontent.getText();
			System.out.println("content:"+content);	
		
		
		//date	
		Date today = new Date();
		SimpleDateFormat sdf01;
		sdf01 = new SimpleDateFormat("yyyy-MM-dd");
			
//			commentlist.add(new UserBoardTableVO(content
//							,num
//							,HRConst.session.getUser_Id()
//							,""							
//							,sdf01.format(today)
//							));
		Integer number = UserboardConst.userTableViewList.size()+1;
		UserBoardTableVO tableVO = 	new UserBoardTableVO(
									txtcontent.getText()
									,number.toString()
									,HRConst.session.getUser_Id()
									,HRConst.session.getName()
									,sdf01.format(today)
									);
		System.out.println(tableVO);			
	
		UserboardConst.userTableViewList.add (tableVO); 
		
		UserBoardVO tmpBoard = new UserBoardVO(
			
									tableVO.getContent(),
									tableVO.getId(),
									tableVO.getNickname(),
									tableVO.getDate()
									);
		tmpBoard.setNo(number.toString());
		int flag = this.userBoardDao.do_save(tmpBoard);
		System.out.println("=========");
		System.out.println("=flag="+flag);
		System.out.println("=========");
					    			
		//file에 저장
		userBoardDao.do_saveFile();
		
		//텍스트 필드 초기화
		
		txtcontent.setText("");						
	
	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {

		//Dao객체 생성 
		userBoardDao = new UserBoardDao();
		System.out.println("===========================");
		System.out.println("==UserboardConst.userBoard="+UserboardConst.userBoard);
		System.out.println("===========================");
		
		//List->TableView list 변환
		//UserBoardVO - >userboard
		//list->observablelist
		
		for(UserBoardVO uVO : UserboardConst.userBoard){
			UserBoardTableVO tVO = new UserBoardTableVO(
					uVO.getContent(),
					uVO.getNo(),
					uVO.getId(),
					uVO.getNickname(),
					uVO.getDate()
					);
			
			
			UserboardConst.userTableViewList.add(tVO);
		}
		
		writeBtn.setOnAction(event->handleWriteBtnAddAction(event) );
		userBoardDao = new UserBoardDao();
		
	
		TableColumn tcNo = tableView.getColumns().get(0);
		tcNo.setCellValueFactory(new PropertyValueFactory<>("no"));
		
		TableColumn tcContent = tableView.getColumns().get(1);
		tcContent.setCellValueFactory(new PropertyValueFactory<>("content"));
		
		TableColumn tcId = tableView.getColumns().get(2);
		tcId.setCellValueFactory(new PropertyValueFactory<>("id"));
		
		TableColumn tcNickname = tableView.getColumns().get(3);
		tcNickname.setCellValueFactory(new PropertyValueFactory<>("nickname"));
		
		TableColumn tcDate = tableView.getColumns().get(4);
		tcDate.setCellValueFactory(new PropertyValueFactory<>("date"));
		
	
		//table에 data set
	
		tableView.setItems(UserboardConst.userTableViewList);
		
		
		//홈버튼
		homeBtn.setOnAction(homeEvent -> handlerHomeBtn(homeEvent));
		}
		
	public void handlerHomeBtn(ActionEvent homeEvent) {
		
		try {
			Parent menuFx;
			menuFx = FXMLLoader.load(getClass().getResource("/com/limitless/recipedetailinfo/MenuFX.fxml"));
			Scene scene = new Scene(menuFx);
			Stage primaryStage = (Stage)homeBtn.getScene().getWindow();
			primaryStage.setScene(scene);
			primaryStage.show();
			UserboardConst.userTableViewList.clear();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	
//	public void handlerBtnBarchartAction(ActionEvent e){
//		Parent parent = null;
//		Stage dialog = new Stage(StageStyle.UTILITY);
//		dialog.initModality(Modality.WINDOW_MODAL);
//		dialog.initOwner(homeBtn.getScene().getWindow());
//		dialog.setTitle("막대 그래프");
//		
//	}
}


	
	
