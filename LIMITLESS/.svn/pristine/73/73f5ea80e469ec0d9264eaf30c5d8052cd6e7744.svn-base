package com.hr.eclass.member.domain;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import org.apache.log4j.Logger;

import com.hr.eclass.cmn.HRConst;
import com.hr.eclass.member.dao.MemberEClassDao;
import com.hr.eclass.member.dao.MemberEClassTestMain;
import com.hr.eclass.member.domain.MemberEClassVO;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.image.ImageView;
import javafx.stage.Stage;

public class LoginController implements Initializable {
	//로그인
	@FXML private TextField id;
	@FXML private PasswordField pw;
	@FXML private Button loginBtn;
	@FXML private Button joinBtn;
	@FXML private Button pwfindBtn;
	@FXML private ImageView loginImageView;
    Logger  LOG=Logger.getLogger(LoginController.class);
	
    
    //Dao
    MemberEClassDao dao = new MemberEClassDao();	
	
	private Alert alert;
	
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// 경고창
		alert = new Alert(AlertType.INFORMATION);
		alert.setTitle("INFORMATION");
		alert.setHeaderText("LIMITLESS");
		
		// 이벤트감지
		loginBtn.setOnAction(event->handlerLoginBtnAction(event));
		joinBtn.setOnAction(event->handlerJoinBtnAction(event));

		
	}
	
	
	
	
	
	
	
	// joinBtn 이벤트처리
	public void handlerJoinBtnAction(ActionEvent event){
		Stage login = new Stage();
		
		try {
			Stage stage = (Stage) joinBtn.getScene().getWindow();
			stage.close();
			Parent root = FXMLLoader.load(getClass().getResource("joinFX.fxml"));
			//외부 css로딩
			root.getStylesheets().add(getClass().getResource("app.css").toString()); //로딩여부 확인
			Scene scene = new Scene(root);
			login.setTitle("Event");
			login.setScene(scene);
			login.show();
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		
		
	}
	
	
	
	
	
	// loginBtn 이벤트처리
	public void handlerLoginBtnAction(ActionEvent event){
		MemberEClassVO memberEClassVO = new MemberEClassVO();
		memberEClassVO.setGroupDiv("3");
		memberEClassVO.setId(id.getText().trim());
		memberEClassVO.setPw(pw.getText().trim());
		
		System.out.println("id:"+dao.checkUserId("3", id.toString()));
		System.out.println("pw:"+dao.checkPasswd("3", id.toString(), pw.toString()));
		// 빈칸이 있는 경우
		if(id.getText().trim().equals("")){
			alert.setContentText("아이디를 입력하세요.");
			alert.show();
			
			id.requestFocus();
			return;
			
		}
		
		
		if(pw.getText().equals("")){
			alert.setContentText("비번을 입력하세요.");
			alert.show();
			
			pw.requestFocus();
			return;
		
		}
		
		
		
		
		
//		// 아이디, 비번 일치하면 로그인 가능
//		if( (id.getText().trim().equals(dao.checkUserId("3", id.toString())))
//			&& (pw.getText().trim().equals(dao.checkPasswd("3", id.toString(), pw.toString())))	) {
			
			
			
			
			
			MemberEClassVO member01 = dao.do_login(memberEClassVO);
			HRConst.session = member01;
			LOG.debug("===========================");
			LOG.debug("member01:"+member01.getMessage());
			LOG.debug("member01:"+member01.getUser_Id());
			LOG.debug("===========================");
			
			if(member01.getMessageDiv()=="00"){
				alert.setContentText(member01.getMessage());
				alert.show();
				return;
			}else if(member01.getMessageDiv()=="01"){
				alert.setContentText(member01.getMessage());
				alert.show();
			}else if(member01.getMessageDiv()=="11"){
				alert.setContentText(member01.getMessage());
				alert.show();
				try {
					Parent menuFx;
					menuFx = FXMLLoader.load(getClass().getResource("/com/limitless/recipedetailinfo/MenuFX.fxml"));
					Scene scene = new Scene(menuFx);
					Stage primaryStage = (Stage)loginBtn.getScene().getWindow();
					primaryStage.setScene(scene);
					primaryStage.show();
					
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
			
			
			
			
			
//		}else{
//			alert.setContentText(member01.getMessage());
//			alert.show();
//			return;
//			
//		}
		
		
		

		
			
	}	
	

}
